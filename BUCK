load('//:subdir_glob.bzl', 'subdir_glob')
load('//:buckaroo_macros.bzl', 'buckaroo_deps')

prebuilt_cxx_library(
  name = 'rt',
  header_only = True,
  exported_linker_flags = [
    '-lrt',
  ],
)

prebuilt_cxx_library(
  name = 'dl',
  header_only = True,
  exported_linker_flags = [
    '-ldl',
  ],
)

prebuilt_cxx_library(
  name = 'ws2-32',
  header_only = True,
  exported_linker_flags = [
    'ws2_32.lib',
  ],
)

unix_headers = {
  'curl_config.h': ':curl-config-h',
}

windows_headers = {
  'curl_config.h': 'lib/config-win32.h',
}

linux_flags = [
  '-D_GNU_SOURCE',
  '-DHAVE_CONFIG_H',
  '-DCURL_DISABLE_FTP',
  '-DCURL_DISABLE_NTLM', # turning it off in configure is not enough
  '-DHAVE_LIBZ',
  '-DHAVE_ZLIB_H',
  # '-Wno-string-plus-int',
  '-Wno-deprecated-declarations',
  '-Wno-incompatible-pointer-types',
  '-DCURL_MAX_WRITE_SIZE=65536',
]

macos_flags = linux_flags + [
  '-fno-constant-cfstrings',
]

ios_flags = linux_flags + [
  '-fno-constant-cfstrings',
]

windows_flags = [
  '/DHAVE_CONFIG_H',
  '/DCURL_DISABLE_FTP',
  '/DCURL_DISABLE_NTLM',
  '/DHAVE_LIBZ',
  '/DHAVE_ZLIB_H',
  # '/DUSE_SSLEAY',
  # '/DUSE_OPENSSL',
  '/DCURL_STATICLIB',
  '/DCURL_DISABLE_LDAP', 
  # '/DUSE_WIN32_LDAP',
  # '/DUSE_OPENLDAP',
  # Defining _USING_V110_SDK71_ is hackery to defeat curl's incorrect
  # detection of what OS releases we can build on with VC 2012. This
  # may not be needed (or may have to change) if the WINVER setting
  # changes in //third_party/msvc/vc_12_0/CROSSTOOL.
  '/D_USING_V110_SDK71_',
  '/DCURL_MAX_WRITE_SIZE=16384',
  '/DCURL_DISABLE_LIBCURL_OPTION',
]

windows_srcs = [
  'lib/asyn-thread.c',
  'lib/inet_ntop.c',
  'lib/system_win32.c',
]

linux_srcs = [
  'lib/vtls/openssl.c',
]

macos_srcs = [
  'lib/vtls/darwinssl.c',
]

ios_srcs = [
  'lib/vtls/darwinssl.c',
]

cxx_library(
  name = 'curl',
  header_namespace = '',
  exported_headers = dict(
    subdir_glob([
      ('include', '**/*.h'),
    ]).items() + [
      ('curl/curlbuild.h', 'include/curl/curlbuild.h.dist'),
    ]
  ),
  headers = subdir_glob([
    ('lib', '**/*.h'),
  ]),
  platform_headers = [
    ('linux.*', unix_headers),
    ('macos.*', unix_headers),
    ('windows.*', windows_headers),
  ],
  preferred_linkage = 'static',
  srcs = [
    "lib/asyn-ares.c",
    "lib/base64.c",
    "lib/conncache.c",
    "lib/connect.c",
    "lib/content_encoding.c",
    "lib/cookie.c",
    "lib/curl_addrinfo.c",
    "lib/curl_fnmatch.c",
    "lib/curl_gethostname.c",
    "lib/curl_memrchr.c",
    "lib/curl_multibyte.c",
    "lib/curl_rtmp.c",
    "lib/curl_sasl.c",
    "lib/curl_sspi.c",
    "lib/curl_threads.c",
    "lib/dict.c",
    "lib/dotdot.c",
    "lib/easy.c",
    "lib/escape.c",
    "lib/file.c",
    "lib/fileinfo.c",
    "lib/formdata.c",
    "lib/getenv.c",
    "lib/getinfo.c",
    "lib/gopher.c",
    "lib/hash.c",
    "lib/hmac.c",
    "lib/hostasyn.c",
    "lib/hostcheck.c",
    "lib/hostip.c",
    "lib/hostip4.c",
    "lib/hostip6.c",
    "lib/hostsyn.c",
    "lib/http.c",
    "lib/http2.c",
    "lib/http_chunks.c",
    "lib/http_digest.c",
    "lib/http_proxy.c",
    "lib/if2ip.c",
    "lib/imap.c",
    "lib/inet_pton.c",
    "lib/krb5.c",
    # "lib/ldap.c",
    "lib/llist.c",
    "lib/md4.c",
    "lib/md5.c",
    "lib/memdebug.c",
    "lib/mprintf.c",
    "lib/multi.c",
    "lib/netrc.c",
    "lib/nonblock.c",
    "lib/nwlib.c",
    "lib/nwos.c",
    # "lib/openldap.c",
    "lib/parsedate.c",
    "lib/pipeline.c",
    "lib/pingpong.c",
    "lib/pop3.c",
    "lib/progress.c",
    "lib/rawstr.c",
    "lib/rtsp.c",
    "lib/security.c",
    "lib/select.c",
    "lib/sendf.c",
    "lib/share.c",
    "lib/slist.c",
    "lib/smtp.c",
    "lib/socks.c",
    "lib/speedcheck.c",
    "lib/splay.c",
    "lib/strdup.c",
    "lib/strequal.c",
    "lib/strerror.c",
    "lib/strtok.c",
    "lib/strtoofft.c",
    "lib/telnet.c",
    "lib/tftp.c",
    "lib/timeval.c",
    "lib/transfer.c",
    "lib/url.c",
    "lib/vauth/cleartext.c",
    "lib/vauth/cram.c",
    "lib/vauth/digest.c",
    "lib/vauth/oauth2.c",
    "lib/vauth/vauth.c",
    "lib/version.c",
    "lib/vtls/vtls.c",
    "lib/warnless.c",
    "lib/wildcard.c",
  ],
    # ] + select({
    #     ":darwin": [
    #         "lib/vtls/darwinssl.c",
    #     ],
    #     ":ios": [
    #         "lib/vtls/darwinssl.c",
    #     ],
    #     ":windows": [
    #         "lib/asyn-thread.c",
    #         "lib/inet_ntop.c",
    #         "lib/system_win32.c",
    #     ],
    #     "//conditions:default": [
    #         "lib/vtls/openssl.c",
    #     ],
    # }),
  platform_srcs = [
    ('linux.*', linux_srcs),
    ('macos.*', macos_srcs),
    ('iphone.*', ios_srcs),
    ('windows.*', windows_srcs),
  ],
    # hdrs = [
    #     "include/curl/curl.h",
    #     "include/curl/curlbuild.h",
    #     "include/curl/curlrules.h",
    #     "include/curl/curlver.h",
    #     "include/curl/easy.h",
    #     "include/curl/mprintf.h",
    #     "include/curl/multi.h",
    #     "include/curl/stdcheaders.h",
    #     "include/curl/typecheck-gcc.h",
    # ],
  platform_compiler_flags = [
    ('linux.*', linux_flags),
    ('macos.*', macos_flags),
    ('ios.*', ios_flags),
    ('windows.*', windows_flags),
  ],
    # copts = select({
    #     ":windows": [
    #         "/Iexternal/curl/lib",
    #         "/DHAVE_CONFIG_H",
    #         "/DCURL_DISABLE_FTP",
    #         "/DCURL_DISABLE_NTLM",
    #         "/DHAVE_LIBZ",
    #         "/DHAVE_ZLIB_H",
    #         # Defining _USING_V110_SDK71_ is hackery to defeat curl's incorrect
    #         # detection of what OS releases we can build on with VC 2012. This
    #         # may not be needed (or may have to change) if the WINVER setting
    #         # changes in //third_party/msvc/vc_12_0/CROSSTOOL.
    #         "/D_USING_V110_SDK71_",
    #     ],
    #     "//conditions:default": [
    #         "-Iexternal/curl/lib",
    #         "-D_GNU_SOURCE",
    #         "-DHAVE_CONFIG_H",
    #         "-DCURL_DISABLE_FTP",
    #         "-DCURL_DISABLE_NTLM",  # turning it off in configure is not enough
    #         "-DHAVE_LIBZ",
    #         "-DHAVE_ZLIB_H",
    #         "-Wno-string-plus-int",
    #     ],
    # }) + select({
    #     ":darwin": [
    #         "-fno-constant-cfstrings",
    #     ],
    #     ":windows": [
    #         # See curl.h for discussion of write size and Windows
    #         "/DCURL_MAX_WRITE_SIZE=16384",
    #     ],
    #     "//conditions:default": [
    #         "-DCURL_MAX_WRITE_SIZE=65536",
    #     ],
    # }),
    # includes = ["include"],
    # linkopts = select({
    #     ":android": [
    #         "-pie",
    #     ],
    #     ":darwin": [
    #         "-Wl,-framework",
    #         "-Wl,CoreFoundation",
    #         "-Wl,-framework",
    #         "-Wl,Security",
    #     ],
    #     ":ios": [],
    #     ":windows": [
    #         "ws2_32.lib",
    #     ],
    #     "//conditions:default": [
    #         "-lrt",
    #     ],
    # }),
  licenses = [
    'COPYING',
  ],
  visibility = [
    'PUBLIC',
  ],
  deps = buckaroo_deps(),
  platform_deps = [
    ('linux.*', [ ':rt', ':dl' ]),
    ('windows.*', [ ':ws2-32' ]),
  ],
    # deps = [
    #     "@zlib_archive//:zlib",
    # ] + select({
    #     ":ios": [],
    #     ":windows": [],
    #     "//conditions:default": [
    #         "@boringssl//:ssl",
    #     ],
    # }),
)

genrule(
  name = 'tool-hugehelp-c',
  out = 'tool_hugehelp.c',
  srcs = [
    'src/tool_hugehelp.c.cvs',
  ],
  cmd = 'cp $SRCS $OUT',
  cmd_exe = 'COPY $SRCS $OUT',
)

cxx_binary(
  name = 'curl-bin',
  header_namespace = '',
  headers = subdir_glob([
    ('lib', '**/*.h'),
    ('src', '**/*.h'),
  ]),
  platform_headers = [
    ('linux.*', unix_headers),
    ('macos.*', unix_headers),
    ('windows.*', windows_headers),
  ],
  srcs = [
    ':tool-hugehelp-c',
        # "lib/config-win32.h",
        "src/slist_wc.c",
        # "src/slist_wc.h",
        "src/tool_binmode.c",
        # "src/tool_binmode.h",
        "src/tool_bname.c",
        # "src/tool_bname.h",
        "src/tool_cb_dbg.c",
        # "src/tool_cb_dbg.h",
        "src/tool_cb_hdr.c",
        # "src/tool_cb_hdr.h",
        "src/tool_cb_prg.c",
        # "src/tool_cb_prg.h",
        "src/tool_cb_rea.c",
        # "src/tool_cb_rea.h",
        "src/tool_cb_see.c",
        # "src/tool_cb_see.h",
        "src/tool_cb_wrt.c",
        # "src/tool_cb_wrt.h",
        "src/tool_cfgable.c",
        # "src/tool_cfgable.h",
        "src/tool_convert.c",
        # "src/tool_convert.h",
        "src/tool_dirhie.c",
        # "src/tool_dirhie.h",
        "src/tool_doswin.c",
        # "src/tool_doswin.h",
        "src/tool_easysrc.c",
        # "src/tool_easysrc.h",
        "src/tool_formparse.c",
        # "src/tool_formparse.h",
        "src/tool_getparam.c",
        # "src/tool_getparam.h",
        "src/tool_getpass.c",
        # "src/tool_getpass.h",
        "src/tool_help.c",
        # "src/tool_help.h",
        "src/tool_helpers.c",
        # "src/tool_helpers.h",
        "src/tool_homedir.c",
        # "src/tool_homedir.h",
        # "src/tool_hugehelp.c",
        # "src/tool_hugehelp.h",
        "src/tool_libinfo.c",
        # "src/tool_libinfo.h",
        "src/tool_main.c",
        # "src/tool_main.h",
        "src/tool_metalink.c",
        # "src/tool_metalink.h",
        "src/tool_mfiles.c",
        # "src/tool_mfiles.h",
        "src/tool_msgs.c",
        # "src/tool_msgs.h",
        "src/tool_operate.c",
        # "src/tool_operate.h",
        "src/tool_operhlp.c",
        # "src/tool_operhlp.h",
        "src/tool_panykey.c",
        # "src/tool_panykey.h",
        "src/tool_paramhlp.c",
        # "src/tool_paramhlp.h",
        "src/tool_parsecfg.c",
        # "src/tool_parsecfg.h",
        # "src/tool_sdecls.h",
        "src/tool_setopt.c",
        # "src/tool_setopt.h",
        # "src/tool_setup.h",
        "src/tool_sleep.c",
        # "src/tool_sleep.h",
        "src/tool_strdup.c",
        # "src/tool_strdup.h",
        "src/tool_urlglob.c",
        # "src/tool_urlglob.h",
        "src/tool_util.c",
        # "src/tool_util.h",
        # "src/tool_version.h",
        "src/tool_vms.c",
        # "src/tool_vms.h",
        "src/tool_writeenv.c",
        # "src/tool_writeenv.h",
        "src/tool_writeout.c",
        # "src/tool_writeout.h",
        "src/tool_xattr.c",
        # "src/tool_xattr.h",
    ],
    platform_compiler_flags = [
      ('linux.*', linux_flags),
      ('macos.*', macos_flags),
      ('ios.*', ios_flags),
      ('windows.*', windows_flags),
    ],
    # copts = select({
    #     ":windows": [
    #         "/Iexternal/curl/lib",
    #         "/DHAVE_CONFIG_H",
    #         "/DCURL_DISABLE_LIBCURL_OPTION",
    #     ],
    #     "//conditions:default": [
    #         "-Iexternal/curl/lib",
    #         "-D_GNU_SOURCE",
    #         "-DHAVE_CONFIG_H",
    #         "-DCURL_DISABLE_LIBCURL_OPTION",
    #         "-Wno-string-plus-int",
    #     ],
    # }),
    deps = [
      ':curl',
    ],
)

genrule(
  name = 'curl-config-h',
  out = 'curl_config.h',
  cmd = "\n".join([
      "cat <<'EOF' > $OUT",
      "#ifndef EXTERNAL_CURL_INCLUDE_CURL_CONFIG_H_",
      "#define EXTERNAL_CURL_INCLUDE_CURL_CONFIG_H_",
      "",
      "#if !defined(_WIN32) && !defined(__APPLE__)",
      "#  include <openssl/opensslv.h>",
      "#  if defined(OPENSSL_IS_BORINGSSL)",
      "#    define HAVE_BORINGSSL 1",
      "#  endif",
      "#endif",
      "",
      "#if defined(_WIN32)",
      "#  include \"lib/config-win32.h\"",
      "#  define BUILDING_LIBCURL 1",
      "#  define CURL_DISABLE_CRYPTO_AUTH 1",
      "#  define CURL_DISABLE_IMAP 1",
      "#  define CURL_DISABLE_LDAP 1",
      "#  define CURL_DISABLE_LDAPS 1",
      "#  define CURL_DISABLE_POP3 1",
      "#  define CURL_PULL_WS2TCPIP_H 1",
      "#  define HTTP_ONLY 1",
      "#elif defined(__APPLE__)",
      "#  define HAVE_FSETXATTR_6 1",
      "#  define HAVE_SETMODE 1",
      "#  define HAVE_SYS_FILIO_H 1",
      "#  define HAVE_SYS_SOCKIO_H 1",
      "#  define OS \"x86_64-apple-darwin15.5.0\"",
      "#  define USE_DARWINSSL 1",
      "#else",
      "#  define CURL_CA_BUNDLE \"/etc/ssl/certs/ca-certificates.crt\"",
      "#  define GETSERVBYPORT_R_ARGS 6",
      "#  define GETSERVBYPORT_R_BUFSIZE 4096",
      "#  define HAVE_BORINGSSL 1",
      "#  define HAVE_CLOCK_GETTIME_MONOTONIC 1",
      "#  define HAVE_CRYPTO_CLEANUP_ALL_EX_DATA 1",
      "#  define HAVE_FSETXATTR_5 1",
      "#  define HAVE_GETHOSTBYADDR_R 1",
      "#  define HAVE_GETHOSTBYADDR_R_8 1",
      "#  define HAVE_GETHOSTBYNAME_R 1",
      "#  define HAVE_GETHOSTBYNAME_R_6 1",
      "#  define HAVE_GETSERVBYPORT_R 1",
      "#  define HAVE_LIBSSL 1",
      "#  define HAVE_MALLOC_H 1",
      "#  define HAVE_MSG_NOSIGNAL 1",
      "#  define HAVE_OPENSSL_CRYPTO_H 1",
      "#  define HAVE_OPENSSL_ERR_H 1",
      "#  define HAVE_OPENSSL_PEM_H 1",
      "#  define HAVE_OPENSSL_PKCS12_H 1",
      "#  define HAVE_OPENSSL_RSA_H 1",
      "#  define HAVE_OPENSSL_SSL_H 1",
      "#  define HAVE_OPENSSL_X509_H 1",
      "#  define HAVE_RAND_EGD 1",
      "#  define HAVE_RAND_STATUS 1",
      "#  define HAVE_SSL_GET_SHUTDOWN 1",
      "#  define HAVE_STROPTS_H 1",
      "#  define HAVE_TERMIOS_H 1",
      "#  define OS \"x86_64-pc-linux-gnu\"",
      "#  define RANDOM_FILE \"/dev/urandom\"",
      "#  define USE_OPENSSL 1",
      "#endif",
      "",
      "#if !defined(_WIN32)",
      "#  define CURL_DISABLE_DICT 1",
      "#  define CURL_DISABLE_FILE 1",
      "#  define CURL_DISABLE_GOPHER 1",
      "#  define CURL_DISABLE_IMAP 1",
      "#  define CURL_DISABLE_LDAP 1",
      "#  define CURL_DISABLE_LDAPS 1",
      "#  define CURL_DISABLE_POP3 1",
      "#  define CURL_DISABLE_SMTP 1",
      "#  define CURL_DISABLE_TELNET 1",
      "#  define CURL_DISABLE_TFTP 1",
      "#  define CURL_EXTERN_SYMBOL __attribute__ ((__visibility__ (\"default\")))",
      "#  define ENABLE_IPV6 1",
      "#  define GETHOSTNAME_TYPE_ARG2 size_t",
      "#  define GETNAMEINFO_QUAL_ARG1 const",
      "#  define GETNAMEINFO_TYPE_ARG1 struct sockaddr *",
      "#  define GETNAMEINFO_TYPE_ARG2 socklen_t",
      "#  define GETNAMEINFO_TYPE_ARG46 socklen_t",
      "#  define GETNAMEINFO_TYPE_ARG7 int",
      "#  define HAVE_ALARM 1",
      "#  define HAVE_ALLOCA_H 1",
      "#  define HAVE_ARPA_INET_H 1",
      "#  define HAVE_ARPA_TFTP_H 1",
      "#  define HAVE_ASSERT_H 1",
      "#  define HAVE_BASENAME 1",
      "#  define HAVE_BOOL_T 1",
      "#  define HAVE_CONNECT 1",
      "#  define HAVE_DLFCN_H 1",
      "#  define HAVE_ERRNO_H 1",
      "#  define HAVE_FCNTL 1",
      "#  define HAVE_FCNTL_H 1",
      "#  define HAVE_FCNTL_O_NONBLOCK 1",
      "#  define HAVE_FDOPEN 1",
      "#  define HAVE_FORK 1",
      "#  define HAVE_FREEADDRINFO 1",
      "#  define HAVE_FREEIFADDRS 1",
      "#  if !defined(__ANDROID__)",
      "#    define HAVE_FSETXATTR 1",
      "#  endif",
      "#  define HAVE_FTRUNCATE 1",
      "#  define HAVE_GAI_STRERROR 1",
      "#  define HAVE_GETADDRINFO 1",
      "#  define HAVE_GETADDRINFO_THREADSAFE 1",
      "#  define HAVE_GETEUID 1",
      "#  define HAVE_GETHOSTBYADDR 1",
      "#  define HAVE_GETHOSTBYNAME 1",
      "#  define HAVE_GETHOSTNAME 1",
      "#  if !defined(__ANDROID__)",
      "#    define HAVE_GETIFADDRS 1",
      "#  endif",
      "#  define HAVE_GETNAMEINFO 1",
      "#  define HAVE_GETPPID 1",
      "#  define HAVE_GETPROTOBYNAME 1",
      "#  define HAVE_GETPWUID 1",
      "#  if !defined(__ANDROID__)",
      "#    define HAVE_GETPWUID_R 1",
      "#  endif",
      "#  define HAVE_GETRLIMIT 1",
      "#  define HAVE_GETTIMEOFDAY 1",
      "#  define HAVE_GMTIME_R 1",
      "#  if !defined(__ANDROID__)",
      "#    define HAVE_IFADDRS_H 1",
      "#  endif",
      "#  define HAVE_IF_NAMETOINDEX 1",
      "#  define HAVE_INET_ADDR 1",
      "#  define HAVE_INET_NTOP 1",
      "#  define HAVE_INET_PTON 1",
      "#  define HAVE_INTTYPES_H 1",
      "#  define HAVE_IOCTL 1",
      "#  define HAVE_IOCTL_FIONBIO 1",
      "#  define HAVE_IOCTL_SIOCGIFADDR 1",
      "#  define HAVE_LIBGEN_H 1",
      "#  define HAVE_LIBZ 1",
      "#  define HAVE_LIMITS_H 1",
      "#  define HAVE_LL 1",
      "#  define HAVE_LOCALE_H 1",
      "#  define HAVE_LOCALTIME_R 1",
      "#  define HAVE_LONGLONG 1",
      "#  define HAVE_MEMORY_H 1",
      "#  define HAVE_NETDB_H 1",
      "#  define HAVE_NETINET_IN_H 1",
      "#  define HAVE_NETINET_TCP_H 1",
      "#  define HAVE_NET_IF_H 1",
      "#  define HAVE_PERROR 1",
      "#  define HAVE_PIPE 1",
      "#  define HAVE_POLL 1",
      "#  define HAVE_POLL_FINE 1",
      "#  define HAVE_POLL_H 1",
      "#  define HAVE_POSIX_STRERROR_R 1",
      "#  define HAVE_PWD_H 1",
      "#  define HAVE_RECV 1",
      "#  define HAVE_SELECT 1",
      "#  define HAVE_SEND 1",
      "#  define HAVE_SETJMP_H 1",
      "#  define HAVE_SETLOCALE 1",
      "#  define HAVE_SETRLIMIT 1",
      "#  define HAVE_SETSOCKOPT 1",
      "#  define HAVE_SGTTY_H 1",
      "#  define HAVE_SIGACTION 1",
      "#  define HAVE_SIGINTERRUPT 1",
      "#  define HAVE_SIGNAL 1",
      "#  define HAVE_SIGNAL_H 1",
      "#  define HAVE_SIGSETJMP 1",
      "#  define HAVE_SIG_ATOMIC_T 1",
      "#  define HAVE_SOCKADDR_IN6_SIN6_SCOPE_ID 1",
      "#  define HAVE_SOCKET 1",
      "#  define HAVE_SOCKETPAIR 1",
      "#  define HAVE_STDBOOL_H 1",
      "#  define HAVE_STDINT_H 1",
      "#  define HAVE_STDIO_H 1",
      "#  define HAVE_STDLIB_H 1",
      "#  define HAVE_STRCASECMP 1",
      "#  define HAVE_STRDUP 1",
      "#  define HAVE_STRERROR_R 1",
      "#  define HAVE_STRINGS_H 1",
      "#  define HAVE_STRING_H 1",
      "#  define HAVE_STRNCASECMP 1",
      "#  define HAVE_STRSTR 1",
      "#  define HAVE_STRTOK_R 1",
      "#  define HAVE_STRTOLL 1",
      "#  define HAVE_STRUCT_SOCKADDR_STORAGE 1",
      "#  define HAVE_STRUCT_TIMEVAL 1",
      "#  define HAVE_SYS_IOCTL_H 1",
      "#  define HAVE_SYS_PARAM_H 1",
      "#  define HAVE_SYS_POLL_H 1",
      "#  define HAVE_SYS_RESOURCE_H 1",
      "#  define HAVE_SYS_SELECT_H 1",
      "#  define HAVE_SYS_SOCKET_H 1",
      "#  define HAVE_SYS_STAT_H 1",
      "#  define HAVE_SYS_TIME_H 1",
      "#  define HAVE_SYS_TYPES_H 1",
      "#  define HAVE_SYS_UIO_H 1",
      "#  define HAVE_SYS_UN_H 1",
      "#  define HAVE_SYS_WAIT_H 1",
      "#  define HAVE_SYS_XATTR_H 1",
      "#  define HAVE_TIME_H 1",
      "#  define HAVE_UNAME 1",
      "#  define HAVE_UNISTD_H 1",
      "#  define HAVE_UTIME 1",
      "#  define HAVE_UTIME_H 1",
      "#  define HAVE_VARIADIC_MACROS_C99 1",
      "#  define HAVE_VARIADIC_MACROS_GCC 1",
      "#  define HAVE_WRITABLE_ARGV 1",
      "#  define HAVE_WRITEV 1",
      "#  define HAVE_ZLIB_H 1",
      "#  define LT_OBJDIR \".libs/\"",
      "#  define PACKAGE \"curl\"",
      "#  define PACKAGE_BUGREPORT \"a suitable curl mailing list: https://curl.haxx.se/mail/\"",
      "#  define PACKAGE_NAME \"curl\"",
      "#  define PACKAGE_STRING \"curl -\"",
      "#  define PACKAGE_TARNAME \"curl\"",
      "#  define PACKAGE_URL \"\"",
      "#  define PACKAGE_VERSION \"-\"",
      "#  define RECV_TYPE_ARG1 int",
      "#  define RECV_TYPE_ARG2 void *",
      "#  define RECV_TYPE_ARG3 size_t",
      "#  define RECV_TYPE_ARG4 int",
      "#  define RECV_TYPE_RETV ssize_t",
      "#  define RETSIGTYPE void",
      "#  define SELECT_QUAL_ARG5",
      "#  define SELECT_TYPE_ARG1 int",
      "#  define SELECT_TYPE_ARG234 fd_set *",
      "#  define SELECT_TYPE_ARG5 struct timeval *",
      "#  define SELECT_TYPE_RETV int",
      "#  define SEND_QUAL_ARG2 const",
      "#  define SEND_TYPE_ARG1 int",
      "#  define SEND_TYPE_ARG2 void *",
      "#  define SEND_TYPE_ARG3 size_t",
      "#  define SEND_TYPE_ARG4 int",
      "#  define SEND_TYPE_RETV ssize_t",
      "#  define SIZEOF_INT 4",
      "#  define SIZEOF_LONG 8",
      "#  define SIZEOF_OFF_T 8",
      "#  define SIZEOF_SHORT 2",
      "#  define SIZEOF_SIZE_T 8",
      "#  define SIZEOF_TIME_T 8",
      "#  define SIZEOF_VOIDP 8",
      "#  define STDC_HEADERS 1",
      "#  define STRERROR_R_TYPE_ARG3 size_t",
      "#  define TIME_WITH_SYS_TIME 1",
      "#  define VERSION \"-\"",
      "#  ifndef _DARWIN_USE_64_BIT_INODE",
      "#    define _DARWIN_USE_64_BIT_INODE 1",
      "#  endif",
      "#endif",
      "",
      "#endif  // EXTERNAL_CURL_INCLUDE_CURL_CONFIG_H_",
      "EOF",
  ]),
  cmd_exe = 'echo >> $OUT',
)
